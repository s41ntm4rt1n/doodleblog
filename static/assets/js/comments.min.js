if (function() {
    var t = function(t) {
        var e;
        this.element = t, this.moreContent = this.element.getElementsByClassName("js-read-more__content"), this.count = this.element.getAttribute("data-characters") || 200, this.counting = 0, this.btnClasses = this.element.getAttribute("data-btn-class"), this.ellipsis = !this.element.getAttribute("data-ellipsis") || "off" != this.element.getAttribute("data-ellipsis"), this.btnShowLabel = "Read more", this.btnHideLabel = "Read less", this.toggleOff = !this.element.getAttribute("data-toggle") || "off" != this.element.getAttribute("data-toggle"), 0 == this.moreContent.length && function t(e, n) {
                if (n.counting >= n.count) return e.classList.add("js-read-more__content"), e.outerHTML;
                for (var s = e.childNodes, i = "", a = 0; a < s.length; a++) s[a].nodeType == Node.TEXT_NODE ? i += l(s[a], n) : i += t(s[a], n);
                return e.innerHTML = i, e.outerHTML
            }((e = this).element, e),
            function(t) {
                var e = t.element.getAttribute("data-btn-labels");
                if (e) {
                    var n = e.split(",");
                    t.btnShowLabel = n[0].trim(), t.btnHideLabel = n[1].trim()
                }
            }(this),
            function(t) {
                if (t.moreContent = t.element.getElementsByClassName("js-read-more__content"), 0 == t.moreContent.length) return t.element.classList.add("read-more--loaded");
                var e = ' <button class="js-read-more__btn ' + t.btnClasses + '">' + t.btnShowLabel + "</button>",
                    n = ' <button class="js-read-more__btn hide ' + t.btnClasses + '">' + t.btnHideLabel + "</button>";
                t.ellipsis && (e = '<span class="js-read-more__ellipsis" aria-hidden="true">...</span>' + e);
                t.moreContent[t.moreContent.length - 1].insertAdjacentHTML("afterend", n), t.moreContent[0].insertAdjacentHTML("afterend", e),
                    function(t) {
                        for (var e = 0; e < t.moreContent.length; e++) t.moreContent[e].classList.add("hide");
                        t.element.classList.add("read-more--loaded")
                    }(t), s = t, s.btnToggle = s.element.getElementsByClassName("js-read-more__btn"), s.ellipsis = s.element.getElementsByClassName("js-read-more__ellipsis"), s.btnToggle[0].addEventListener("click", function(t) {
                        t.preventDefault(), i(s, !0)
                    }), s.btnToggle[1].addEventListener("click", function(t) {
                        t.preventDefault(), i(s, !1)
                    });
                var s
            }(this)
    };

    function l(t, e) {
        var n = t.textContent;
        if (0 == n.replace(/\s/g, "").length) return "";
        if (e.counting >= e.count) return '<span class="js-read-more__content">' + n + "</span>";
        if (e.counting + n.length < e.count) return e.counting = e.counting + n.length, n;
        var s = n.substr(0, e.count - e.counting);
        s = s.substr(0, Math.min(s.length, s.lastIndexOf(" ")));
        var i = n.substr(s.length, n.length);
        return e.counting = e.count, s + '<span class="js-read-more__content">' + i + "</span>"
    }

    function i(t, e) {
        for (var n = 0; n < t.moreContent.length; n++) t.moreContent[n].classList.toggle("hide", !e);
        if (t.btnToggle[0].classList.toggle("hide", e), t.btnToggle[1].classList.toggle("hide", !e), 0 < t.ellipsis.length && t.ellipsis[0].classList.toggle("hide", e), t.toggleOff || t.btn.classList.add("hide"), e) {
            var s = t.moreContent[0].getAttribute("tabindex");
            r(t.moreContent[0]), i = t.moreContent[0], a = s, parseInt(i.getAttribute("tabindex")) < 0 && (i.style.outline = "none", !a && i.removeAttribute("tabindex"))
        } else r(t.btnToggle[0]);
        var i, a
    }

    function r(t) {
        t.focus(), document.activeElement !== t && (t.setAttribute("tabindex", "-1"), t.focus())
    }
    var e = document.getElementsByClassName("js-read-more");
    if (0 < e.length)
        for (var n = 0; n < e.length; n++) new t(e[n])
}(), !Util)
function Util() {}
Util.setAttributes = function(t, e) {
    for (var n in e) t.setAttribute(n, e[n])
},
function() {
    var t = function(t, e) {
        this.element = t, this.summary = this.element.getElementsByClassName("js-details__summary")[0], this.details = this.element.getElementsByClassName("js-details__content")[0], this.htmlElSupported = "open" in this.element, this.initDetails(e), this.initDetailsEvents()
    };
    t.prototype.initDetails = function(t) {
        Util.setAttributes(this.summary, {
            "aria-expanded": "false",
            "aria-controls": "details--" + t,
            role: "button"
        }), Util.setAttributes(this.details, {
            "aria-hidden": "true",
            id: "details--" + t
        })
    }, t.prototype.initDetailsEvents = function() {
        var s = this;
        this.htmlElSupported ? this.element.addEventListener("toggle", function(t) {
            var e = s.element.open ? ["true", "false"] : ["false", "true"];
            s.updateAriaValues(e)
        }) : this.summary.addEventListener("click", function(t) {
            t.preventDefault();
            var e, n = s.element.getAttribute("open");
            n ? s.element.removeAttribute("open") : s.element.setAttribute("open", "true"), e = n ? ["false", "true"] : ["true", "false"], s.updateAriaValues(e)
        })
    }, t.prototype.updateAriaValues = function(t) {
        this.summary.setAttribute("aria-expanded", t[0]), this.details.setAttribute("aria-hidden", t[1])
    };
    var e, n = document.getElementsByClassName("js-details");
    if (0 < n.length)
        for (var s = 0; s < n.length; s++) new t(n[e = s], e)
}(),
function() {
    function t(l) {
        var r = l.getElementsByClassName("js-comments__vote-label");
        l.addEventListener("click", function() {
            var t, e, n, s, i, a = "true" == l.getAttribute("aria-pressed");
            l.setAttribute("aria-pressed", !a), l.classList.toggle("comments__vote-btn--pressed", !a),
                function(t, e) {
                    if (0 == t.length) return;
                    var n = parseInt(t[0].textContent);
                    t[0].textContent = e ? n - 1 : n + 1
                }(r, a), t = l, n = a, s = 0 != (e = r).length && parseInt(e[0].textContent), i = new CustomEvent("newVote", {
                    detail: {
                        count: s,
                        upVote: !n
                    }
                }), t.dispatchEvent(i)
        })
    }
    var e = document.getElementsByClassName("js-comments__vote-btn");
    if (0 < e.length)
        for (var n = 0; n < e.length; n++) t(e[n])
}();